OpenSSL заметки:

************************* Как OpenSSL сопоставляет cipher id и cipher name *****************************************************
При SSL handshake'е клиент передает набор cipher'ов, cipher'ы передаюутся 2байтными идентификаторами(wireshark их показывает)
значения идентификаторов назначается IANA. В OpenSSL их можно посмотреть в ssl/s3_lib.c:
    
    uint32_t valid;
    const char *name;           /* text name */
    const char *stdname;        /* RFC name */
    uint32_t id;                /* id, 4 bytes, first is version */
    /*
     * changed in 1.0.0: these four used to be portions of a single value
     * 'algorithms'
     */
    uint32_t algorithm_mkey;    /* key exchange algorithm */
    uint32_t algorithm_auth;    /* server authentication */
    uint32_t algorithm_enc;     /* symmetric encryption */
    uint32_t algorithm_mac;     /* symmetric authentication */
    int min_tls;                /* minimum SSL/TLS protocol version */
    int max_tls;                /* maximum SSL/TLS protocol version */
    int min_dtls;               /* minimum DTLS protocol version */
    int max_dtls;               /* maximum DTLS protocol version */
    uint32_t algo_strength;     /* strength and export flags */
    uint32_t algorithm2;        /* Extra flags */
    int32_t strength_bits;      /* Number of bits really used */
    uint32_t alg_bits;          /* Number of bits for algorithm */

static SSL_CIPHER tls13_ciphers[] = 
{
	{
		1,
        TLS1_3_RFC_AES_128_GCM_SHA256,
        TLS1_3_RFC_AES_128_GCM_SHA256,
        TLS1_3_CK_AES_128_GCM_SHA256,
        SSL_kANY,
        SSL_aANY,
        SSL_AES128GCM,
        SSL_AEAD,
        TLS1_3_VERSION, TLS1_3_VERSION,
        0, 0,
        SSL_HIGH,
        SSL_HANDSHAKE_MAC_SHA256,
        128,
        128,
	}
	{
		1,
		"GOST2001-GOST89-GOST89",          
		"TLS_GOSTR341001_WITH_28147_CNT_IMIT",
		0x3000081,                         // вот это идентификатор, 0x3000 какая-то втнутренняя фигня
		SSL_kGOST,
		SSL_aGOST01,
		SSL_eGOST2814789CNT,
		SSL_GOST89MAC,
		TLS1_VERSION, TLS1_2_VERSION,
		0, 0,
		SSL_HIGH,
		SSL_HANDSHAKE_MAC_GOST94 | TLS1_PRF_GOST94 | TLS1_STREAM_MAC,
		256,
		256,
    }
}

Так же смотри: ssl/ssl_ciph.c
uint16_t SSL_CIPHER_get_protocol_id(const SSL_CIPHER *c)
{
    return c->id & 0xFFFF;
}

ssl/ssl_asn1.c:
SSL_SESSION *d2i_SSL_SESSION(SSL_SESSION **a, const unsigned char **pp, long length)
{
	...
	id = 0x03000000L | ((unsigned long)as->cipher->data[0] << 8L)
	                 | (unsigned long)as->cipher->data[1];

	ret->cipher_id = id;
	ret->cipher = ssl3_get_cipher_by_id(id);
	...
}




