Sony Bravia KDL-42W705B.xml
Похоже телевизор плохо понимает mkv формируемый утилитой ffmpeg, если же просто перепаковать результат с помощью mkvmerge - вроде нормально работает
аудиокодек EAC не поддерживается

Примеры:
	для ffmpeg все индексы начинаются с 0

	ffmpeg -h encoder=hevc | less
	ffmpeg x265 -help
	
	ffmpeg -y -i input.mkv -map 0 -c copy -c:v hevc -preset veryslow -crf 28 output.mkv	
	
	ffmpeg -y -i input.mkv -c copy -vf "scale=1920:-1" -c:v libx264 -crf 17 -preset slow -tune film -profile:v high -level 4.1 output.mkv
	ffmpeg -y -i input.mkv -c copy -c:a ac3            -c:v libx264 -crf 17 -preset slow -tune film -profile:v high -level 4.1 output.mkv
	
	ffmpeg -y -i input.mkv -c copy -filter:a volume=2 -c:a ac3 output.mkv
	ffmpeg -y -i input.mkv -map 0:0 -map 0:2 -map 0:2 -map 0:3 -map 0:4 -c copy -c:a:1 ac3 -b:a:1 640k output.mkv

	# задваивание звуковых дорожек с сохранением всех остальных дорожек/субтитров
	ffmpeg -y -i input.mkv -map 0:v -c:v copy -map 0:a -map 0:a -c:a copy -filter:a:1 volume=2 -c:a:1 ac3 -map 0:s -c:s copy output.mkv
	
	# metadata
	ffmpeg -i input1.mkv -i input2.mkv ....  -metadata:s:s:0 language=rus output.mkv
	ffmpeg -i ....  -metadata:s:a:0 language=rus output.mkv
	ffmpeg -i ....  -metadata:s:v   language=rus output.mkv
	
	# set title and default streams
	ffmpeg -i input1 -i input2 ... \
	    -metadata title="title" \
        -metadata:s:a:0 language=rus -metadata:s:a:1 language=eng  \
		-metadata:s:s:0 language=rus -metadata:s:s:1 language=eng  \
		-disposition:a:1 default -disposition:a:0 none  \
		-disposition:s:1 default -disposition:s:0 none  \
	    output.mkv
	
	# -dn disables some unsupported data streams
	ffmpeg -i ..mp4 -map 0 -dn -c copy -c:s srt output.mkv

	metadata:
	* s - stream
	* s - subtitle
	* 0 - first subtitle track
	
	
	mkvpropedit '{}' --edit track:a1 --set flag-default=1
	mkvpropedit '{}' --edit track:a1 --edit track:v1 --edit track:s1 --set language=rus
	
	nohup bash -c 'for ep in {01..10}; do ffmpeg ... ; done' &> ffmpeg.log &
	nohup bash -c 'for ep in *; do ffmpeg -y -i "$ep" -c copy -filter:a volume=2 -c:a ac3 tmp.mkv; mkvmerge tmp.mkv -o "$ep"'; done

	# конвертация DVD
	# субтитры нельзя просто конвертнуть, в DVD субтитры по факту картинки накладываемые на видеоряд, srt - же текст
	# по факту DVD субтитры нужно распознавать с помощью спец программы - вроде есть даже cразу в srt, в любом случае ffmpeg этого не умеет
	cat *.VOB > input.vob
	ffmpeg -analyzeduration 3000M -probesize 3000M \
		-y -i input.vob -map 0:1 -map 0:3 -map 0:3 \
		-c:v libx264 -crf 17 -preset slow -tune film -profile:v high -level 4.1 \
		-filter:a:2 volume=2 -c:a ac3 \
		-metadata title="Солярис" -metadata:s:a:0 language=rus -metadata:s:a:1 language=rus

	# или сразу cat'инг на лету
	ffmpeg -analyzeduration 3000M -probesize 3000M \
		-y -i <(cat /data-store/tmp/House\ On\ Haunted\ Hill\ \(DVD5\)/VIDEO_TS/*.VOB) -dn -map 0 \
		-c copy -c:v libx264 -crf 17 -preset slow -tune film -profile:v high -level 4.1 -max_muxing_queue_size 300000 \
		-filter:a:2 volume=2 -c:a ac3 -metadata title="House On Haunted Hill" \
		/data-store/tmp/output.mkv

	Too many packets buffered for output stream 
	add -max_muxing_queue_size 300000 after conversion flags


	Can't write packet with unknown timestamp - ffmpeg -fflags +genpts ...
	# порядок важен genpts нужно передавать вначале
	
    на лету с помощьюе перла меняем имя файла на основе regex'ов
	for file in "Сезон 3"/*; do
		file=`basename "$file"`;
		newname=`perl -e '($s, $e, $n) = $ARGV[0] =~ /Star.trek.TOS\.s(\d*)e(\d*)\.(.*)\.avi/; $n =~ s/\./ /g; print "Star Trek.TOS.S${s}E${e}.${n}.mkv"' "$file"`;
		srt="${file%.avi}".srt;
		mkvmerge -o "/data-store/mmedia/TV-Shows/Star Trek TOS/Сезон 3/$newname" "Сезон 3/$file" "/data-store/tmp/Star.trek.TOS.BDRip eng sub/Сезон 3/$srt";
	done


	#with bash
	#!/usr/bin/bash

	#for ep in {01..10}; do
		#input=(/data-store/Torrents/The.Show.S04.1080p.WEBRip.Rus.Eng/The.Show.S04E$ep.*.mkv)
	for input in /data-store/Torrents/The.Show.S04.1080p.WEBRip.Rus.Eng/*.mkv; do
		file=`basename "$input"`
		
		showrgx="The.Show.S([[:digit:]]*)E([[:digit:]]*)\.(.*)\.1080p.*mkv"
		if [[ $file =~ $showrgx ]]; then
			season=`printf %02d $(( 10#${BASH_REMATCH[1]} ))`
			episode=`printf %02d $(( 10#${BASH_REMATCH[2]} ))`
			title=`tr . ' ' <<< "${BASH_REMATCH[3]}"`
		
			output="/data-store/mmedia/tmp/tv-shows/The Show (Season 4)/The Show.S${season}E${episode}"
			if [[ -n $title ]]; then output="$output.$title"; fi
			output="$output.mkv"
			tmp=/data-store/tmp/output.mkv
		
			# change ext optionally
			#output="${output%.*}".mkv;

			echo "$title: $input -> $output"

			opts=(-map 0:v -map 0:a:1 -map 0:a:0 -map 0:s -codec copy -filter:a:0 volume=2 -codec:a:0 ac3 -disposition:a:0 default -disposition:a:1 none -disposition:s:0 default -disposition:s:1 none)
			ffmpeg -y -i "$input" "${opts[@]}" "$tmp"
			mkvmerge "$tmp" --output "$output"
		fi
	done

